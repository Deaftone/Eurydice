import net.deaftone.buildSrc.Deps

/*plugins {
    id 'com.google.devtools.ksp'
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "kotlin-kapt"
    id 'com.google.dagger.hilt.android'
}*/
plugins {
    id "com.android.application"
    id "dagger.hilt.android.plugin"
    id "kotlin-android"
    id "kotlin-kapt"
    id "kotlin-parcelize"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "androidx.navigation.safeargs.kotlin"
}

android {
    namespace 'net.deaftone.eurydice'

    defaultConfig {
        applicationId "net.deaftone.eurydice"
        minSdk 21
        compileSdkVersion 33
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "${Deps.Android.Compose.compilerVersion}"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}
kapt {
    correctErrorTypes true
}
dependencies {
    api(Deps.Android.Room.runtime)
    api(Deps.Android.Room.paging)
    api(Deps.Android.Room.ktx)
    kapt(Deps.Android.Room.compiler)

    api(Deps.Landscapist.landscapistGlide)
    api(Deps.Landscapist.landscapistPlaceholder)

    api(Deps.Retrofit.retrofit)
    api(Deps.Retrofit.retrofitMoshi)

    // Moshi
    api(Deps.Moshi.moshi)
    api(Deps.Moshi.moshiKotlin)

    api(Deps.OkHttp.logger)

    api(Deps.Dagger.hilt)
    kapt(Deps.Dagger.hiltCompiler)
    kapt(Deps.Dagger.compiler)
    api(Deps.Android.navigationHiltCompose)

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.5.3"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:2.5.3"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:2.5.3"

    implementation "com.google.accompanist:accompanist-navigation-animation:0.25.0"

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation "androidx.compose.ui:ui:1.4.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.4.1"
    implementation 'androidx.compose.material3:material3:1.1.0-beta02'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:1.4.1"
    implementation 'com.github.bumptech.glide:glide:4.15.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.4.1"
    debugImplementation "androidx.compose.ui:ui-tooling:1.4.1"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.4.1"
}